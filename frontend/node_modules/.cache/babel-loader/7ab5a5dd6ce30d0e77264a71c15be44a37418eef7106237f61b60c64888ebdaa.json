{"ast":null,"code":"var _jsxFileName = \"/home/blackbird/Documents/chessgame/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './index.css';\nimport io from 'socket.io-client';\nimport { isValidMove } from './logic.js';\nimport { picesImageswhiteblack } from './pices/exportimages.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [board, setBoard] = useState([['r', 'n', 'b', 'q', 'k', 'b', 'n', 'r'], ['p', 'p', 'p', 'p', 'p', 'p', 'p', 'p'], [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '], [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '], [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '], [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '], ['P', 'P', 'P', 'P', 'P', 'P', 'P', 'P'], ['R', 'N', 'B', 'K', 'Q', 'B', 'N', 'R']]);\n  const [start, setStart] = useState('');\n  const [end, setEnd] = useState('');\n  const [piece, setPiece] = useState('');\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    // Initialize socket connection once\n    const newSocket = io('http://localhost:8010');\n    setSocket(newSocket);\n    newSocket.on('move2', (from, to, piece) => {\n      const [fromRow, fromCol] = from;\n      const [toRow, toCol] = to;\n      const updatedBoard = [...board];\n      updatedBoard[toRow][toCol] = piece;\n      updatedBoard[fromRow][fromCol] = ' ';\n      setBoard(updatedBoard);\n    });\n\n    // Clean up socket connection on unmount\n    return () => {\n      newSocket.disconnect();\n    };\n  }, [board]);\n  const handleDragStart = (e, row, col) => {\n    setStart([row, col]);\n    setPiece(board[row][col]);\n  };\n  const handleDrop = (e, row, col) => {\n    setEnd([row, col]);\n  };\n  useEffect(() => {\n    if (start && end && piece) {\n      const [fromRow, fromCol] = start;\n      const [toRow, toCol] = end;\n      if (isValidMove(start, end, piece)) {\n        const updatedBoard = [...board];\n        updatedBoard[toRow][toCol] = piece;\n        updatedBoard[fromRow][fromCol] = ' ';\n        setBoard(updatedBoard);\n\n        // Emit the move to the server\n        socket.emit('room1', start, end, piece);\n      } else {\n        // Reset the move if it's invalid\n        setPiece('');\n        setStart('');\n        setEnd('');\n      }\n    }\n  }, [end]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chessboard\",\n    children: board.map((row, rowIndex) => row.map((square, colIndex) => {\n      const piece = board[rowIndex][colIndex];\n      const color = (rowIndex + colIndex) % 2 === 0 ? 'white' : 'black';\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: `${colIndex}${rowIndex}`,\n        className: `boxpices ${color}`,\n        onDragOver: e => e.preventDefault(),\n        onDrop: e => handleDrop(e, rowIndex, colIndex),\n        children: piece !== ' ' && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: picesImageswhiteblack[piece],\n          id: piece,\n          className: \"pices\",\n          draggable: true,\n          onDragStart: e => handleDragStart(e, rowIndex, colIndex)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this)\n      }, `${rowIndex}-${colIndex}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this);\n    }))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"HSQfo8+cVJLkgwYRasGx1NMSiUI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","io","isValidMove","picesImageswhiteblack","jsxDEV","_jsxDEV","App","_s","board","setBoard","start","setStart","end","setEnd","piece","setPiece","socket","setSocket","newSocket","on","from","to","fromRow","fromCol","toRow","toCol","updatedBoard","disconnect","handleDragStart","e","row","col","handleDrop","emit","id","children","map","rowIndex","square","colIndex","color","className","onDragOver","preventDefault","onDrop","src","draggable","onDragStart","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/blackbird/Documents/chessgame/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './index.css';\nimport io from 'socket.io-client';\nimport { isValidMove } from './logic.js';\nimport { picesImageswhiteblack } from './pices/exportimages.js';\n\nconst App = () => {\n  const [board, setBoard] = useState([\n    ['r', 'n', 'b', 'q', 'k', 'b', 'n', 'r'],\n    ['p', 'p', 'p', 'p', 'p', 'p', 'p', 'p'],\n    [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],\n    [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],\n    [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],\n    [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],\n    ['P', 'P', 'P', 'P', 'P', 'P', 'P', 'P'],\n    ['R', 'N', 'B', 'K', 'Q', 'B', 'N', 'R'],\n  ]);\n\n  const [start, setStart] = useState('');\n  const [end, setEnd] = useState('');\n  const [piece, setPiece] = useState('');\n  const [socket, setSocket] = useState(null);\n\n  useEffect(() => {\n    // Initialize socket connection once\n    const newSocket = io('http://localhost:8010');\n    setSocket(newSocket);\n\n    newSocket.on('move2', (from, to, piece) => {\n      const [fromRow, fromCol] = from;\n      const [toRow, toCol] = to;\n      const updatedBoard = [...board];\n      updatedBoard[toRow][toCol] = piece;\n      updatedBoard[fromRow][fromCol] = ' ';\n      setBoard(updatedBoard);\n    });\n\n    // Clean up socket connection on unmount\n    return () => {\n      newSocket.disconnect();\n    };\n  }, [board]);\n\n  const handleDragStart = (e, row, col) => {\n    setStart([row, col]);\n    setPiece(board[row][col]);\n  };\n\n  const handleDrop = (e, row, col) => {\n    setEnd([row, col]);\n  };\n\n  useEffect(() => {\n    if (start && end && piece) {\n      const [fromRow, fromCol] = start;\n      const [toRow, toCol] = end;\n\n      if (isValidMove(start, end, piece)) {\n        const updatedBoard = [...board];\n        updatedBoard[toRow][toCol] = piece;\n        updatedBoard[fromRow][fromCol] = ' ';\n        setBoard(updatedBoard);\n        \n        // Emit the move to the server\n        socket.emit('room1', start, end, piece);\n      } else {\n        // Reset the move if it's invalid\n        setPiece('');\n        setStart('');\n        setEnd('');\n      }\n    }\n  }, [end]);\n\n  return (\n    <div id=\"chessboard\">\n      {board.map((row, rowIndex) =>\n        row.map((square, colIndex) => {\n          const piece = board[rowIndex][colIndex];\n          const color = (rowIndex + colIndex) % 2 === 0 ? 'white' : 'black';\n          return (\n            <div\n              key={`${rowIndex}-${colIndex}`}\n              id={`${colIndex}${rowIndex}`}\n              className={`boxpices ${color}`}\n              onDragOver={(e) => e.preventDefault()}\n              onDrop={(e) => handleDrop(e, rowIndex, colIndex)}\n            >\n              {piece !== ' ' && (\n                <img\n                  src={picesImageswhiteblack[piece]}\n                  id={piece}\n                  className=\"pices\"\n                  draggable\n                  onDragStart={(e) => handleDragStart(e, rowIndex, colIndex)}\n                />\n              )}\n            </div>\n          );\n        })\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}