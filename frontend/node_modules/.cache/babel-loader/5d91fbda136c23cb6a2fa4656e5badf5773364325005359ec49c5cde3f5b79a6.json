{"ast":null,"code":"var _jsxFileName = \"/home/blackbird/MultiplayerChessGame/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './index.css';\nimport io from 'socket.io-client';\nimport { isValidMove } from './logic.js';\nimport { picesImageswhiteblack } from './pices/exportimages.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [board, setBoard] = useState([['r', 'n', 'b', 'q', 'k', 'b', 'n', 'r'], ['p', 'p', 'p', 'p', 'p', 'p', 'p', 'p'], [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '], [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '], [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '], [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '], ['P', 'P', 'P', 'P', 'P', 'P', 'P', 'P'], ['R', 'N', 'B', 'K', 'Q', 'B', 'N', 'R']]);\n  const [start, setStart] = useState('');\n  const [end, setEnd] = useState('');\n  const [piece, setPiece] = useState('');\n  let islocalmove = true;\n  useEffect(() => {\n    // Initialize socket connection once\n    const Socket = io('http://localhost:4000/');\n    if (start !== '' && end !== '' && piece !== '') {\n\n      //  Socket.emit('usermoves',[start,end,piece])\n\n      // Socket.on('move2', ([from, to, piece]) => {\n      //   console.log(from, to, piece, 'recived from server' );\n\n      //   const [fromRow, fromCol] = from;\n      //   const [toRow, toCol] = to;\n      //   const updatedBoard = [...board];\n      //   updatedBoard[toRow][toCol] = piece;\n      //   updatedBoard[fromRow][fromCol] = ' ';\n      //   setBoard(updatedBoard);\n      // })   \n    }\n\n    // Clean up socket connection on unmount\n    // return () => {\n    //   Socket.disconnect();\n    // };\n  }, [board, start, end, piece]);\n  useEffect(() => {\n    if (start && end && piece) {\n      const [fromRow, fromCol] = start;\n      const [toRow, toCol] = end;\n      if (isValidMove(start, end, piece)) {\n        const updatedBoard = [...board];\n        updatedBoard[toRow][toCol] = piece;\n        updatedBoard[fromRow][fromCol] = ' ';\n        setBoard(updatedBoard);\n      } else {\n        // Reset the move if it's invalid\n        setPiece('');\n        setStart('');\n        setEnd('');\n      }\n    }\n  }, [end]);\n  useEffect(() => {\n    const chessSquares = document.querySelectorAll('.chessSquare');\n    const allPices = document.querySelectorAll('.pices');\n    allPices.forEach(pice => {\n      pice.addEventListener('dragstart', e => {\n        pice.classList.add('dragable');\n        setStart(pice.parentNode.id);\n      });\n      pice.addEventListener('dragend', () => {\n        setEnd(pice.parentNode.id);\n        setPiece(pice.id);\n        pice.classList.remove('dragable');\n      });\n    });\n    chessSquares.forEach(square => {\n      square.addEventListener('dragover', e => {\n        e.preventDefault();\n        const draggingElement = document.querySelector('.dragable');\n        if (draggingElement) {\n          square.appendChild(draggingElement);\n        }\n      });\n    });\n    return () => {\n      allPices.forEach(pice => {\n        pice.removeEventListener('dragstart', () => {});\n        pice.removeEventListener('dragend', () => {});\n      });\n      chessSquares.forEach(square => {\n        square.removeEventListener('dragover', () => {});\n      });\n    };\n  }, [piece, end, start]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chessboard\",\n    children: board.map((row, rowIndex) => row.map((square, colIndex) => {\n      const piece = board[rowIndex][colIndex];\n      const color = (rowIndex + colIndex) % 2 === 0 ? 'white' : 'black';\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: `${colIndex}${rowIndex}`,\n        className: `boxpices chessSquare ${color}`,\n        children: piece !== ' ' && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: picesImageswhiteblack[piece],\n          id: piece,\n          className: \"pices\",\n          draggable: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this)\n      }, `${rowIndex}-${colIndex}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this);\n    }))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"rTQwQIz6IsU1qVsk/IzjPPfbhsk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","io","isValidMove","picesImageswhiteblack","jsxDEV","_jsxDEV","App","_s","board","setBoard","start","setStart","end","setEnd","piece","setPiece","islocalmove","Socket","fromRow","fromCol","toRow","toCol","updatedBoard","chessSquares","document","querySelectorAll","allPices","forEach","pice","addEventListener","e","classList","add","parentNode","id","remove","square","preventDefault","draggingElement","querySelector","appendChild","removeEventListener","children","map","row","rowIndex","colIndex","color","className","src","draggable","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/blackbird/MultiplayerChessGame/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './index.css';\nimport io from 'socket.io-client';\nimport { isValidMove } from './logic.js';\nimport { picesImageswhiteblack } from './pices/exportimages.js';\n\nconst App = () => {\n  const [board, setBoard] = useState([\n    ['r', 'n', 'b', 'q', 'k', 'b', 'n', 'r'],\n    ['p', 'p', 'p', 'p', 'p', 'p', 'p', 'p'],\n    [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],\n    [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],\n    [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],\n    [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],\n    ['P', 'P', 'P', 'P', 'P', 'P', 'P', 'P'],\n    ['R', 'N', 'B', 'K', 'Q', 'B', 'N', 'R'],\n  ]);\n\n  const [start, setStart] = useState('');\n  const [end, setEnd] = useState('');\n  const [piece, setPiece] = useState('');\n  let islocalmove = true\n\n  useEffect(() => {\n    // Initialize socket connection once\n    const Socket  = io('http://localhost:4000/');\n\n    if(start !== '' &&end  !== ''&&piece  !== ''){\n  \n    //  Socket.emit('usermoves',[start,end,piece])\n\n    // Socket.on('move2', ([from, to, piece]) => {\n    //   console.log(from, to, piece, 'recived from server' );\n      \n    //   const [fromRow, fromCol] = from;\n    //   const [toRow, toCol] = to;\n    //   const updatedBoard = [...board];\n    //   updatedBoard[toRow][toCol] = piece;\n    //   updatedBoard[fromRow][fromCol] = ' ';\n    //   setBoard(updatedBoard);\n    // })   \n    }\n\n    // Clean up socket connection on unmount\n    // return () => {\n    //   Socket.disconnect();\n    // };\n  }, [board,start,end,piece]);\n\n\n  useEffect(() => {\n    if (start && end && piece) {\n      const [fromRow, fromCol] = start;\n      const [toRow, toCol] = end;\n\n      if (isValidMove(start, end, piece)) {\n        const updatedBoard = [...board];\n        updatedBoard[toRow][toCol] = piece;\n        updatedBoard[fromRow][fromCol] = ' ';\n        setBoard(updatedBoard);\n      } else {\n        // Reset the move if it's invalid\n        setPiece('');\n        setStart('');\n        setEnd('');\n      }\n    }\n  }, [end]);\n  useEffect(() => {\n        const chessSquares = document.querySelectorAll('.chessSquare');\n        const allPices = document.querySelectorAll('.pices');\n        allPices.forEach(pice => {\n          pice.addEventListener('dragstart', (e) => {\n            pice.classList.add('dragable');\n            setStart(pice.parentNode.id)\n          });\n          pice.addEventListener('dragend', () => {\n            setEnd(pice.parentNode.id)\n            setPiece(pice.id)\n            pice.classList.remove('dragable');\n          });\n        });\n    \n        chessSquares.forEach(square => {\n          square.addEventListener('dragover', (e) => {\n            e.preventDefault();\n            const draggingElement = document.querySelector('.dragable');\n            if (draggingElement) {\n              square.appendChild(draggingElement);\n            }\n          });\n        });\n        \n        return () => {\n          allPices.forEach(pice => {\n            pice.removeEventListener('dragstart', () => { });\n            pice.removeEventListener('dragend', () => { });\n          });\n    \n          chessSquares.forEach(square => {\n            square.removeEventListener('dragover', () => { });\n          });\n        };\n      }, [piece, end, start]);\n  return (\n    <div id=\"chessboard\">\n      {board.map((row, rowIndex) =>\n        row.map((square, colIndex) => {\n          const piece = board[rowIndex][colIndex];\n          const color = (rowIndex + colIndex) % 2 === 0 ? 'white' : 'black';\n          return (\n            <div\n              key={`${rowIndex}-${colIndex}`}\n              id={`${colIndex}${rowIndex}`}\n              className={`boxpices chessSquare ${color}`}\n            >\n              {piece !== ' ' && (\n                <img\n                  src={picesImageswhiteblack[piece]}\n                  id={piece}\n                  className=\"pices\"\n                  draggable\n                \n                />\n              )}\n            </div>\n          );\n        })\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}